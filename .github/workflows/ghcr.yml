name: GitHub Container Registry

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

      submodules:
        required: false
        type: string
        default: ''

      filename:
        required: false
        type: string
        default: Dockerfile

      ctx:
        required: false
        type: string
        default: '.'

      cacheFrom:
        required: false
        type: string
        default: ''

      login:
        required: false
        type: boolean
        default: true

      username:
        required: false
        type: string
        default: ${{ github.actor }}

      token:
        required: false
        type: string
        default: ''

      push:
        required: false
        type: boolean
        default: true

jobs:
  dockerize:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: üîê login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ inputs.username }}
          password: ${{ inputs.token != '' && inputs.token || secrets.GITHUB_TOKEN }}
        if: ${{ inputs.push || inputs.login }}

      - name: üèóÔ∏è setup repository
        uses: actions/checkout@v3
        with:
          submodules: ${{ inputs.submodules }}

      - name: üõ†Ô∏è building image
        shell: bash
        run: |
          if [ -z "${{ inputs.cacheFrom }}" ]; then
            docker build \
              --tag "ghcr.io/${GH_REPOSITORY,,}:$IMAGE_TAG" \
              --file "${{ inputs.filename }}" \
              "${{ inputs.ctx }}"
          else
            docker pull "ghcr.io/${GH_REPOSITORY,,}:IMAGE_CACHE_TAG" || true
            docker build \
              --cache-from "ghcr.io/${GH_REPOSITORY,,}:$IMAGE_CACHE_TAG" \
              --tag "ghcr.io/${GH_REPOSITORY,,}:IMAGE_TAG" \
              --file "${{ inputs.filename }}" \
              "${{ inputs.ctx }}"
          fi
        env:
          GH_REPOSITORY: ${{ github.repository }}
          IMAGE_TAG: ${{ inputs.tag }}
          IMAGE_CACHE_TAG: ${{ inputs.cacheFrom }}

      - name: üöÄ push image into container registry
        run: docker push "ghcr.io/${GH_REPOSITORY,,}:$IMAGE_TAG"
        if: ${{ inputs.push }}
        env:
          GH_REPOSITORY: ${{ github.repository }}
          IMAGE_TAG: ${{ inputs.tag }}
